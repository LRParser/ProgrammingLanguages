Group #9 Extra Credit Assignment
	Jon Boone
	Joshua Datko
	Paul DeMicco
	Joseph Heenan
________________

NOTE:  The OOM implementation DOES NOT work completely.  Local state
to the class is not properly updated by method calls.


=======

semantics-description

Description of the semantics and syntax of the OOM.


implementation-description

Description of the implementation of the OOM.


interpreterext.py

Contains the grammar for the modified mini language.  The syntax
change was to add class defintion, both with and without single
inheritance, and method call functionality. 


programext.py

Implements class defintion and method calls in the mini-language.  The
major high level features were implemented:

* Created class object entries in the global name table.
* Defined class-specific name table to hold class variables and
  methods. 

func_globals.py

Global variable to keep track of what scoping rules are in play.  Left
over from assignment 6. 


makefile

view-semantics --
    description of syntax and semantics

view-implementation --
    description of implementation

view-tests --
    document describing the test inputs
    
view-code —
    display (using the more utility) all of your source code

run-static —
    Run your statically-bound interpreter, which will read from stdin

clean —
    remove all binaries and intermediate files


TEST FILES - Will be explained in detail below:


-------------------------------------------------------------------------------

TESTING:


The following test case files (*.p) have been run through the interpreters to ensure
proper operation.


class_tests/class_list.p

Tests creation of a list class, the creation of an instance of the
list class, as well as the invocation of a method of the class. 

